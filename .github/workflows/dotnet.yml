# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET
permissions: write-all

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:  # This allows manual triggering of the workflow

jobs:
  build:

    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only run on push events

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

  release:
    runs-on: ${{ matrix.config.os }}
    if: github.event_name == 'workflow_dispatch'  # Only run on workflow_dispatch events

    strategy:
      matrix:
        config: 
          - os: ubuntu-latest
            rid: linux-x64
#          - os: windows-latest
#            rid: win-x64
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Release
      run: dotnet publish Pack3r.Console -c Release -o .release -r ${{ matrix.config.rid }}
#    - name: Create release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: v0.0.1  # Specify your desired tag name here
#        release_name: Release v0.0.1  # Specify your desired release name here
#        body: |
#          TODO
    - run: ls -a
    - run: ls -a Pack3r.Console
    - run: ls -a ..
    - run: ls -a ../..
#    - name: Upload release asset
#      id: upload-release-asset
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: Pack3r/.release/  # Path to the directory or file you want to include in the release
#        asset_name: my-release.zip  # Name of the release asset
#        asset_content_type: application/zip  # Adjust the content type if necessary
